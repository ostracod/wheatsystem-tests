
========================================

>>> TEST newFile

>>> BYTECODE_FILE wsBoot 1
FUNC init, init_ID
    VAR xName, s32
    VAR xHandle, s32
    newAlloc xName, 0, 1
    wrt xName[0]:s8, 120
    VAR fileExists, s8
    fileExists fileExists, xName
    logTestData fileExists
    newFile xName, 0, 1, 10
    fileExists fileExists, xName
    logTestData fileExists
    openFile xHandle, xName
    VAR result, s8
    fileType result, xHandle
    logTestData result
    fileIsGuarded result, xHandle
    logTestData result
    fileSize result, xHandle
    logTestData result
END

>>> EXPECT 0 1 0 1 10

========================================

>>> TEST newFile_longName

>>> BYTECODE_FILE wsBoot 1
DEF nameLen, 200
FUNC init, init_ID
    VAR fileName, s32
    newAlloc fileName, 0, nameLen
    VAR index, s32
    wrt index, nameLen
    LBL loop
    sub index, index, 1
    wrt fileName[index]:s8, 65
    jmpNZ loop, index
    setErrJmp handleErr
    newFile fileName, 0, 1, 10
    haltTest
    LBL handleErr
    VAR err, s8
    err err
    logTestData err
    haltTest
END

>>> EXPECT 8

========================================

>>> TEST newFile_invalidType

>>> BYTECODE_FILE wsBoot 1
FUNC init, init_ID
    VAR xName, s32
    newAlloc xName, 0, 1
    wrt xName[0]:s8, 120
    setErrJmp handleErr
    newFile xName, 3, 1, 10
    haltTest
    LBL handleErr
    VAR err, s8
    err err
    logTestData err
    haltTest
END

>>> EXPECT 3

========================================

>>> TEST newFile_negativeSize

>>> BYTECODE_FILE wsBoot 1
FUNC init, init_ID
    VAR xName, s32
    newAlloc xName, 0, 1
    wrt xName[0]:s8, 120
    setErrJmp handleErr
    newFile xName, 0, 1, -1
    haltTest
    LBL handleErr
    VAR err, s8
    err err
    logTestData err
    haltTest
END

>>> EXPECT 4

========================================

>>> TEST newFile_duplicate

>>> BYTECODE_FILE wsBoot 1
FUNC init, init_ID
    VAR xName, s32
    newAlloc xName, 0, 1
    wrt xName[0]:s8, 120
    setErrJmp handleErr
    newFile xName, 0, 1, 10
    haltTest
    LBL handleErr
    VAR err, s8
    err err
    logTestData err
    haltTest
END

>>> HEX_FILE x 0 0
00

>>> EXPECT 8

========================================

>>> TEST delFile

>>> BYTECODE_FILE wsBoot 1
FUNC init, init_ID
    VAR xName, s32
    VAR xHandle, s32
    newAlloc xName, 0, 1
    wrt xName[0]:s8, 120
    openFile xHandle, xName
    VAR fileExists, s8
    fileExists fileExists, xName
    logTestData fileExists
    delFile xHandle
    fileExists fileExists, xName
    logTestData fileExists
    setErrJmp handleErr
    VAR garbage, s32
    fileSize garbage, xHandle
    haltTest
    LBL handleErr
    VAR err, s8
    err err
    logTestData err
    haltTest
END

>>> HEX_FILE x 0 0
00

>>> EXPECT 1 0 6

========================================


