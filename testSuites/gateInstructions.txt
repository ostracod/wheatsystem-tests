
========================================

>>> TEST newGate

>>> BYTECODE_FILE wsBoot 1
FUNC init, wsInit.id
    VAR gate, s32
    newGate gate, 0
    waitGate gate
    VAR creator, s32
    VAR attrs, s8
    allocCreator creator, gate
    allocAttrs attrs, gate
    bAnd attrs, attrs, sentryAllocAttr
    logTestData creator
    logTestData attrs
    haltTest
END

>>> EXPECT 0 2

========================================

>>> TEST newGate_cleanUp

>>> BYTECODE_FILE wsBoot 1 1
FUNC init, wsInit.id
    VAR xName, s32
    VAR xHandle, s32
    newAlloc xName, 0, 1
    wrt xName[0]:s8, 120
    openFile xHandle, xName
    launch xHandle
    VAR index, s8
    findFunc index, xHandle, -1
    newArgFrame 4
    callRemote xHandle, index
    VAR gate, s32
    wrt gate, nextArgFrame[0]:s32
    VAR creator, s32
    allocCreator creator, gate
    logTestData creator
    killApp xHandle
    VAR delay, s8
    wrt delay, 100
    LBL loop
    sub delay, delay, 1
    jmpNZ loop, delay
    setErrJmp handleErr
    allocCreator creator, gate
    haltTest
    LBL handleErr
    VAR err, s8
    err err
    logTestData err
    haltTest
END

>>> BYTECODE_FILE x 0
FUNC test, -1
    ARG gate, s32
    newGate gate, 0
END

>>> EXPECT 0 7

========================================

>>> TEST delGate

>>> BYTECODE_FILE wsBoot 1
FUNC init, wsInit.id
    VAR gate, s32
    newGate gate, 0
    delGate gate
    setErrJmp handleErr
    VAR creator, s32
    allocCreator creator, gate
    haltTest
    LBL handleErr
    VAR err, s8
    err err
    logTestData err
    haltTest
END

>>> EXPECT 7

========================================

>>> TEST delGate_duringWait

>>> BYTECODE_FILE wsBoot 1 1
FUNC init, wsInit.id
    VAR xName, s32
    VAR xHandle, s32
    newAlloc xName, 0, 1
    wrt xName[0]:s8, 120
    openFile xHandle, xName
    launch xHandle
    VAR delay, s8
    wrt delay, 100
    LBL loop
    sub delay, delay, 1
    jmpNZ loop, delay
    VAR index, s8
    findFunc index, xHandle, -1
    callRemote xHandle, index
END

>>> BYTECODE_FILE x 0
VAR gate, s32
FUNC init, wsInit.id
    setErrJmp handleErr
    newGate gate, 0
    closeGate gate
    waitGate gate
    haltTest
    LBL handleErr
    VAR err, s8
    err err
    logTestData err
    haltTest
END
FUNC test, -1
    delGate gate
END

>>> EXPECT 11

========================================

>>> TEST delGate_notOwner

>>> BYTECODE_FILE wsBoot 1 1
FUNC init, wsInit.id
    VAR xName, s32
    VAR xHandle, s32
    newAlloc xName, 0, 1
    wrt xName[0]:s8, 120
    openFile xHandle, xName
    launch xHandle
    VAR index, s8
    findFunc index, xHandle, -1
    newArgFrame 4
    callRemote xHandle, index
    VAR gate, s32
    wrt gate, nextArgFrame[0]:s32
    setErrJmp handleErr
    delGate gate
    haltTest
    LBL handleErr
    VAR err, s8
    err err
    logTestData err
    haltTest
END

>>> BYTECODE_FILE x 0
FUNC test, -1
    ARG gate, s32
    newGate gate, 0
END

>>> EXPECT 9

========================================

>>> TEST waitGate_mode0

>>> BYTECODE_FILE wsBoot 1 1
FUNC init, wsInit.id
    VAR xName, s32
    VAR xHandle, s32
    newAlloc xName, 0, 1
    wrt xName[0]:s8, 120
    openFile xHandle, xName
    launch xHandle
    VAR index, s8
    findFunc index, xHandle, -1
    VAR delay, s8
    wrt delay, 100
    LBL loop
    sub delay, delay, 1
    jmpNZ loop, delay
    logTestData 10
    callRemote xHandle, index
END

>>> BYTECODE_FILE x 0
VAR gate, s32
FUNC init, wsInit.id
    newGate gate, 0
    closeGate gate
    waitGate gate
    logTestData 20
    waitGate gate
    logTestData 30
    haltTest
END
FUNC test, -1
    openGate gate
END

>>> EXPECT 10 20 30

========================================

>>> TEST waitGate_mode0Multithread

>>> BYTECODE_FILE wsBoot 1 1
FUNC init, wsInit.id
    VAR xName, s32
    VAR xHandle, s32
    newAlloc xName, 0, 1
    wrt xName[0]:s8, 120
    openFile xHandle, xName
    launch xHandle
    VAR index, s8
    findFunc index, xHandle, -1
    VAR delay, s8
    wrt delay, 100
    LBL loop
    sub delay, delay, 1
    jmpNZ loop, delay
    callRemote xHandle, index
END

>>> BYTECODE_FILE x 0
VAR gate, s32
FUNC init, wsInit.id
    newGate gate, 0
    closeGate gate
    waitGate gate
    logTestData 11
    call sleep
    haltTest
END
FUNC test, -1
    openGate gate
    waitGate gate
    logTestData 11
    call sleep
    haltTest
END
FUNC sleep
    VAR delay, s8
    wrt delay, 100
    LBL loop
    sub delay, delay, 1
    jmpNZ loop, delay
END

>>> EXPECT 11 11

========================================

>>> TEST waitGate_mode1

>>> BYTECODE_FILE wsBoot 1 1
FUNC init, wsInit.id
    VAR xName, s32
    VAR xHandle, s32
    newAlloc xName, 0, 1
    wrt xName[0]:s8, 120
    openFile xHandle, xName
    launch xHandle
    VAR index, s8
    findFunc index, xHandle, -1
    VAR delay, s8
    wrt delay, 100
    LBL loop
    sub delay, delay, 1
    jmpNZ loop, delay
    logTestData 50
    callRemote xHandle, index
END

>>> BYTECODE_FILE x 0
VAR gate, s32
FUNC init, wsInit.id
    newGate gate, 1
    waitGate gate
    logTestData 40
    waitGate gate
    logTestData 60
    haltTest
END
FUNC test, -1
    openGate gate
END

>>> EXPECT 40 50 60

========================================

>>> TEST waitGate_mode1Multithread

>>> BYTECODE_FILE wsBoot 1 1
FUNC init, wsInit.id
    VAR xName, s32
    VAR xHandle, s32
    newAlloc xName, 0, 1
    wrt xName[0]:s8, 120
    openFile xHandle, xName
    launch xHandle
    VAR index, s8
    findFunc index, xHandle, -1
    VAR delay, s8
    wrt delay, 100
    LBL loop
    sub delay, delay, 1
    jmpNZ loop, delay
    callRemote xHandle, index
END

>>> BYTECODE_FILE x 0
VAR gate, s32
FUNC init, wsInit.id
    newGate gate, 1
    closeGate gate
    waitGate gate
    logTestData 11
    call sleep
    haltTest
END
FUNC test, -1
    openGate gate
    waitGate gate
    logTestData 11
    call sleep
    haltTest
END
FUNC sleep
    VAR delay, s8
    wrt delay, 100
    LBL loop
    sub delay, delay, 1
    jmpNZ loop, delay
END

>>> EXPECT 11

========================================

>>> TEST waitGate_badType

>>> BYTECODE_FILE wsBoot 1
FUNC init, wsInit.id
    VAR alloc, s32
    newAlloc alloc, 0, 10
    setErrJmp handleErr
    waitGate alloc
    haltTest
    LBL handleErr
    VAR err, s8
    err err
    logTestData err
    haltTest
END

>>> EXPECT 3

========================================


